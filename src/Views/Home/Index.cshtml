@{
    Layout = null;
    const int days = 31;
    const int hours = 1;
}

<!DOCTYPE html>
<html>
<head>
    <title>Xania Binding Lab</title>
    <link href="~/Content/calendar.css" rel="stylesheet" />
    <script>
        window.model = null;
        window.binder = null;

        var pairs = [];
        for (var h = 0; h < @hours ; h++) {
            for (var d = 0; d < @days; d++) {
                pairs.push({ "d": d, "h": h });
            }
        }
        
        var step = function(i) {
            var p = pairs[i];
            window.model.setCell(p.h, p.d, Math.random());

            window.binder.update([p.h, "[]", p.d, "status"], model[p.h][p.d].status);
        }

        function startAnimation() {
            step(Math.floor(Math.random() * pairs.length));
            binder.updateDom();
            // setTimeout(startAnimation.bind(this), 0);
            window.requestAnimationFrame(startAnimation);
        }

        function loadAll() {
            window.requestAnimationFrame(function() {
                for (var i = 0; i < pairs.length; i++) {
                    step(i);
                }
                binder.updateDom();
            });
        }
    </script>
</head>
<body>
    <button onclick="loadAll();">load all</button>
    <button onclick="startAnimation();">start animation</button>

    <div id="calendar"></div>

    @*<div id="container" data-model="person">
            <input type="text" data-name="firstName" />
            <input type="text" data-name="lastName" />

            <p>{{firstName}} {{lastName}}</p>
            <p>{{lastName}} {{firstName}}</p>
            <p>{{firstName}}</p>
        </div>*@
    <script data-main="scripts/main" src="~/scripts/require.js"></script>
    <script>
        require(['main', 'xania'], function(main, xn) {
            model = new main.Calendar();

            var template = document.getElementById("calendarTemplate");
            var table = document.importNode(template.content, true);

            binder = new xn.Binder()
                .bind(table);

            var host = document.getElementById("calendar");
            host.appendChild(table);

            binder.update([], model);

            for (var h = 0; h < @hours ; h++) {
                for (var d = 0; d < @days; d++) {
                    model.setCell(h, d, Math.random());
                }
                window.binder.update([h, "[]"], window.model[h]);
            }
        });
    </script>

    @* ReSharper disable WrongExpressionStatement *@
    @* ReSharper disable Html.TagNotResolved *@
    <template id="calendarTemplate">
        <table>
            <tr>
                @for (var day = 0; day < days; day++)
                {
                    <th class="day-header">
                        @(day + 1) Oct
                    </th>
                }
            </tr>
            <tr data-model="0">
                <td data-model="[]" class="hour-cell">
                    <div onclick="{{updateCell}}" class="{{cellClass}}">
                        @* ReSharper disable CssNotResolved *@
                        <div style="{{style.showHour}}" class="time">
                            {{hours}}:00
                        </div>
                        <div style="{{style.showSpinner}}">
                            ...
                        </div>
                        <div style="{{style.showSearchResults}}">
                            <div>{{status.searchResults.options}}</div>
                            <div class="result-label">results</div>
                        </div>
                        @* ReSharper restore CssNotResolved *@
                    </div>
                </td>
            </tr>
        </table>
    </template>
    @* ReSharper restore Html.TagNotResolved *@
    @* ReSharper restore WrongExpressionStatement *@
</body>
</html>
